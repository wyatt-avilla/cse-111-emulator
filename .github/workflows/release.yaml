name: C++ Release

on:
  push:
    branches: ["main"]
    tags:
      - "v*"
  pull_request:
    branches: ["main"]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Cache External Builds
        uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/build
            ${{ github.workspace }}/external/SDL
            ${{ github.workspace }}/external/wxWidgets
          key:
            ${{ runner.os }}-external-${{ hashFiles('external/SDL/**', 'external/wxWidgets/**') }}
          restore-keys: |
            ${{ runner.os }}-external-

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt-get install -y libgtk-3-dev

      - name: Configure CMake
        run: |
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DwxUSE_LIBJPEG=builtin -DSDL_UNIX_CONSOLE_BUILD=ON

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Package Release (ZIP)
        #if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd ${{ github.workspace }}/build
          zip ../release-TEST.zip ./emulator

      - name: Upload Artifact (for debugging)
        #if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-TEST
          path: ${{ github.workspace }}/release-TEST.zip

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: release-${{ github.ref_name }}
          path: .

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: release-${{ github.ref_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
